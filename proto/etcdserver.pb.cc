// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: etcdserver.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "etcdserver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace etcdserverpb {
class RequestDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Request>
     _instance;
} _Request_default_instance_;
class MetadataDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<Metadata>
     _instance;
} _Metadata_default_instance_;

namespace protobuf_etcdserver_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, val_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, dir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, prevvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, previndex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, prevexist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, expiration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, wait_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, since_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, recursive_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, sorted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, quorum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, stream_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, refresh_),
  4,
  0,
  1,
  2,
  8,
  3,
  5,
  9,
  6,
  10,
  7,
  11,
  12,
  13,
  16,
  14,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, nodeid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Metadata, clusterid_),
  0,
  1,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 22, sizeof(Request)},
  { 39, 46, sizeof(Metadata)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Metadata_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "etcdserver.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Request_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Request_default_instance_);_Metadata_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_Metadata_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020etcdserver.proto\022\014etcdserverpb\"\231\002\n\007Req"
      "uest\022\n\n\002ID\030\001 \001(\004\022\016\n\006Method\030\002 \001(\t\022\014\n\004Path"
      "\030\003 \001(\t\022\013\n\003Val\030\004 \001(\t\022\013\n\003Dir\030\005 \001(\010\022\021\n\tPrev"
      "Value\030\006 \001(\t\022\021\n\tPrevIndex\030\007 \001(\004\022\021\n\tPrevEx"
      "ist\030\010 \001(\010\022\022\n\nExpiration\030\t \001(\003\022\014\n\004Wait\030\n "
      "\001(\010\022\r\n\005Since\030\013 \001(\004\022\021\n\tRecursive\030\014 \001(\010\022\016\n"
      "\006Sorted\030\r \001(\010\022\016\n\006Quorum\030\016 \001(\010\022\014\n\004Time\030\017 "
      "\001(\003\022\016\n\006Stream\030\020 \001(\010\022\017\n\007Refresh\030\021 \001(\010\"-\n\010"
      "Metadata\022\016\n\006NodeID\030\001 \001(\004\022\021\n\tClusterID\030\002 "
      "\001(\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 363);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "etcdserver.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_etcdserver_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kIDFieldNumber;
const int Request::kMethodFieldNumber;
const int Request::kPathFieldNumber;
const int Request::kValFieldNumber;
const int Request::kDirFieldNumber;
const int Request::kPrevValueFieldNumber;
const int Request::kPrevIndexFieldNumber;
const int Request::kPrevExistFieldNumber;
const int Request::kExpirationFieldNumber;
const int Request::kWaitFieldNumber;
const int Request::kSinceFieldNumber;
const int Request::kRecursiveFieldNumber;
const int Request::kSortedFieldNumber;
const int Request::kQuorumFieldNumber;
const int Request::kTimeFieldNumber;
const int Request::kStreamFieldNumber;
const int Request::kRefreshFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_etcdserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method()) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_path()) {
    path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
  }
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_val()) {
    val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
  }
  prevvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_prevvalue()) {
    prevvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prevvalue_);
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&id_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.Request)
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prevvalue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&id_)) + sizeof(time_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:etcdserverpb.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  val_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prevvalue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_etcdserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etcdserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  protobuf_etcdserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(!method_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*method_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(!path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*path_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(!val_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*val_.UnsafeRawStringPointer())->clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(!prevvalue_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*prevvalue_.UnsafeRawStringPointer())->clear();
    }
  }
  if (cached_has_bits & 240u) {
    ::memset(&id_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&since_) -
        reinterpret_cast<char*>(&id_)) + sizeof(since_));
  }
  if (cached_has_bits & 65280u) {
    ::memset(&dir_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&refresh_) -
        reinterpret_cast<char*>(&dir_)) + sizeof(refresh_));
  }
  time_ = GOOGLE_LONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 ID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "etcdserverpb.Request.Method");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Path = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->path().data(), static_cast<int>(this->path().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "etcdserverpb.Request.Path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string Val = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_val()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->val().data(), static_cast<int>(this->val().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "etcdserverpb.Request.Val");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Dir = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          set_has_dir();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dir_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string PrevValue = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prevvalue()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->prevvalue().data(), static_cast<int>(this->prevvalue().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "etcdserverpb.Request.PrevValue");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 PrevIndex = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
          set_has_previndex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &previndex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool PrevExist = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
          set_has_prevexist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prevexist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 Expiration = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
          set_has_expiration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expiration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Wait = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
          set_has_wait();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wait_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 Since = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
          set_has_since();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &since_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Recursive = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
          set_has_recursive();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recursive_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Sorted = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
          set_has_sorted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sorted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Quorum = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
          set_has_quorum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &quorum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 Time = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
          set_has_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Stream = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
          set_has_stream();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stream_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool Refresh = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
          set_has_refresh();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &refresh_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ID = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // optional string Method = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // optional string Path = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->path(), output);
  }

  // optional string Val = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val().data(), static_cast<int>(this->val().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Val");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->val(), output);
  }

  // optional bool Dir = 5;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->dir(), output);
  }

  // optional string PrevValue = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prevvalue().data(), static_cast<int>(this->prevvalue().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.PrevValue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->prevvalue(), output);
  }

  // optional uint64 PrevIndex = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->previndex(), output);
  }

  // optional bool PrevExist = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->prevexist(), output);
  }

  // optional int64 Expiration = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(9, this->expiration(), output);
  }

  // optional bool Wait = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->wait(), output);
  }

  // optional uint64 Since = 11;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(11, this->since(), output);
  }

  // optional bool Recursive = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->recursive(), output);
  }

  // optional bool Sorted = 13;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->sorted(), output);
  }

  // optional bool Quorum = 14;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->quorum(), output);
  }

  // optional int64 Time = 15;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(15, this->time(), output);
  }

  // optional bool Stream = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->stream(), output);
  }

  // optional bool Refresh = 17;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->refresh(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 ID = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // optional string Method = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // optional string Path = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->path().data(), static_cast<int>(this->path().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->path(), target);
  }

  // optional string Val = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->val().data(), static_cast<int>(this->val().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.Val");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->val(), target);
  }

  // optional bool Dir = 5;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->dir(), target);
  }

  // optional string PrevValue = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->prevvalue().data(), static_cast<int>(this->prevvalue().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "etcdserverpb.Request.PrevValue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->prevvalue(), target);
  }

  // optional uint64 PrevIndex = 7;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->previndex(), target);
  }

  // optional bool PrevExist = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->prevexist(), target);
  }

  // optional int64 Expiration = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(9, this->expiration(), target);
  }

  // optional bool Wait = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->wait(), target);
  }

  // optional uint64 Since = 11;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(11, this->since(), target);
  }

  // optional bool Recursive = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->recursive(), target);
  }

  // optional bool Sorted = 13;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->sorted(), target);
  }

  // optional bool Quorum = 14;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->quorum(), target);
  }

  // optional int64 Time = 15;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(15, this->time(), target);
  }

  // optional bool Stream = 16;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->stream(), target);
  }

  // optional bool Refresh = 17;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->refresh(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string Method = 2;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method());
    }

    // optional string Path = 3;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // optional string Val = 4;
    if (has_val()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->val());
    }

    // optional string PrevValue = 6;
    if (has_prevvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->prevvalue());
    }

    // optional uint64 ID = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->id());
    }

    // optional uint64 PrevIndex = 7;
    if (has_previndex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->previndex());
    }

    // optional int64 Expiration = 9;
    if (has_expiration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->expiration());
    }

    // optional uint64 Since = 11;
    if (has_since()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->since());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bool Dir = 5;
    if (has_dir()) {
      total_size += 1 + 1;
    }

    // optional bool PrevExist = 8;
    if (has_prevexist()) {
      total_size += 1 + 1;
    }

    // optional bool Wait = 10;
    if (has_wait()) {
      total_size += 1 + 1;
    }

    // optional bool Recursive = 12;
    if (has_recursive()) {
      total_size += 1 + 1;
    }

    // optional bool Sorted = 13;
    if (has_sorted()) {
      total_size += 1 + 1;
    }

    // optional bool Quorum = 14;
    if (has_quorum()) {
      total_size += 1 + 1;
    }

    // optional bool Stream = 16;
    if (has_stream()) {
      total_size += 2 + 1;
    }

    // optional bool Refresh = 17;
    if (has_refresh()) {
      total_size += 2 + 1;
    }

  }
  // optional int64 Time = 15;
  if (has_time()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_method();
      method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_path();
      path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.path_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_val();
      val_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.val_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_prevvalue();
      prevvalue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prevvalue_);
    }
    if (cached_has_bits & 0x00000010u) {
      id_ = from.id_;
    }
    if (cached_has_bits & 0x00000020u) {
      previndex_ = from.previndex_;
    }
    if (cached_has_bits & 0x00000040u) {
      expiration_ = from.expiration_;
    }
    if (cached_has_bits & 0x00000080u) {
      since_ = from.since_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      dir_ = from.dir_;
    }
    if (cached_has_bits & 0x00000200u) {
      prevexist_ = from.prevexist_;
    }
    if (cached_has_bits & 0x00000400u) {
      wait_ = from.wait_;
    }
    if (cached_has_bits & 0x00000800u) {
      recursive_ = from.recursive_;
    }
    if (cached_has_bits & 0x00001000u) {
      sorted_ = from.sorted_;
    }
    if (cached_has_bits & 0x00002000u) {
      quorum_ = from.quorum_;
    }
    if (cached_has_bits & 0x00004000u) {
      stream_ = from.stream_;
    }
    if (cached_has_bits & 0x00008000u) {
      refresh_ = from.refresh_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00010000u) {
    set_time(from.time());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  method_.Swap(&other->method_);
  path_.Swap(&other->path_);
  val_.Swap(&other->val_);
  prevvalue_.Swap(&other->prevvalue_);
  swap(id_, other->id_);
  swap(previndex_, other->previndex_);
  swap(expiration_, other->expiration_);
  swap(since_, other->since_);
  swap(dir_, other->dir_);
  swap(prevexist_, other->prevexist_);
  swap(wait_, other->wait_);
  swap(recursive_, other->recursive_);
  swap(sorted_, other->sorted_);
  swap(quorum_, other->quorum_);
  swap(stream_, other->stream_);
  swap(refresh_, other->refresh_);
  swap(time_, other->time_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_etcdserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etcdserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// optional uint64 ID = 1;
bool Request::has_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Request::set_has_id() {
  _has_bits_[0] |= 0x00000010u;
}
void Request::clear_has_id() {
  _has_bits_[0] &= ~0x00000010u;
}
void Request::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
  clear_has_id();
}
::google::protobuf::uint64 Request::id() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.ID)
  return id_;
}
void Request::set_id(::google::protobuf::uint64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.ID)
}

// optional string Method = 2;
bool Request::has_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_method() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_method() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method();
}
const ::std::string& Request::method() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Method)
  return method_.GetNoArena();
}
void Request::set_method(const ::std::string& value) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Method)
}
#if LANG_CXX11
void Request::set_method(::std::string&& value) {
  set_has_method();
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:etcdserverpb.Request.Method)
}
#endif
void Request::set_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Request.Method)
}
void Request::set_method(const char* value, size_t size) {
  set_has_method();
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Request.Method)
}
::std::string* Request::mutable_method() {
  set_has_method();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Request.Method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Request::release_method() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Request.Method)
  clear_has_method();
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    set_has_method();
  } else {
    clear_has_method();
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Request.Method)
}

// optional string Path = 3;
bool Request::has_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request::set_has_path() {
  _has_bits_[0] |= 0x00000002u;
}
void Request::clear_has_path() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
const ::std::string& Request::path() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Path)
  return path_.GetNoArena();
}
void Request::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Path)
}
#if LANG_CXX11
void Request::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:etcdserverpb.Request.Path)
}
#endif
void Request::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Request.Path)
}
void Request::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Request.Path)
}
::std::string* Request::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Request.Path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Request::release_path() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Request.Path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Request.Path)
}

// optional string Val = 4;
bool Request::has_val() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request::set_has_val() {
  _has_bits_[0] |= 0x00000004u;
}
void Request::clear_has_val() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request::clear_val() {
  val_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_val();
}
const ::std::string& Request::val() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Val)
  return val_.GetNoArena();
}
void Request::set_val(const ::std::string& value) {
  set_has_val();
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Val)
}
#if LANG_CXX11
void Request::set_val(::std::string&& value) {
  set_has_val();
  val_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:etcdserverpb.Request.Val)
}
#endif
void Request::set_val(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_val();
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Request.Val)
}
void Request::set_val(const char* value, size_t size) {
  set_has_val();
  val_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Request.Val)
}
::std::string* Request::mutable_val() {
  set_has_val();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Request.Val)
  return val_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Request::release_val() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Request.Val)
  clear_has_val();
  return val_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request::set_allocated_val(::std::string* val) {
  if (val != NULL) {
    set_has_val();
  } else {
    clear_has_val();
  }
  val_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Request.Val)
}

// optional bool Dir = 5;
bool Request::has_dir() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Request::set_has_dir() {
  _has_bits_[0] |= 0x00000100u;
}
void Request::clear_has_dir() {
  _has_bits_[0] &= ~0x00000100u;
}
void Request::clear_dir() {
  dir_ = false;
  clear_has_dir();
}
bool Request::dir() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Dir)
  return dir_;
}
void Request::set_dir(bool value) {
  set_has_dir();
  dir_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Dir)
}

// optional string PrevValue = 6;
bool Request::has_prevvalue() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request::set_has_prevvalue() {
  _has_bits_[0] |= 0x00000008u;
}
void Request::clear_has_prevvalue() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request::clear_prevvalue() {
  prevvalue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_prevvalue();
}
const ::std::string& Request::prevvalue() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.PrevValue)
  return prevvalue_.GetNoArena();
}
void Request::set_prevvalue(const ::std::string& value) {
  set_has_prevvalue();
  prevvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.PrevValue)
}
#if LANG_CXX11
void Request::set_prevvalue(::std::string&& value) {
  set_has_prevvalue();
  prevvalue_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:etcdserverpb.Request.PrevValue)
}
#endif
void Request::set_prevvalue(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_prevvalue();
  prevvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:etcdserverpb.Request.PrevValue)
}
void Request::set_prevvalue(const char* value, size_t size) {
  set_has_prevvalue();
  prevvalue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:etcdserverpb.Request.PrevValue)
}
::std::string* Request::mutable_prevvalue() {
  set_has_prevvalue();
  // @@protoc_insertion_point(field_mutable:etcdserverpb.Request.PrevValue)
  return prevvalue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Request::release_prevvalue() {
  // @@protoc_insertion_point(field_release:etcdserverpb.Request.PrevValue)
  clear_has_prevvalue();
  return prevvalue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Request::set_allocated_prevvalue(::std::string* prevvalue) {
  if (prevvalue != NULL) {
    set_has_prevvalue();
  } else {
    clear_has_prevvalue();
  }
  prevvalue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prevvalue);
  // @@protoc_insertion_point(field_set_allocated:etcdserverpb.Request.PrevValue)
}

// optional uint64 PrevIndex = 7;
bool Request::has_previndex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Request::set_has_previndex() {
  _has_bits_[0] |= 0x00000020u;
}
void Request::clear_has_previndex() {
  _has_bits_[0] &= ~0x00000020u;
}
void Request::clear_previndex() {
  previndex_ = GOOGLE_ULONGLONG(0);
  clear_has_previndex();
}
::google::protobuf::uint64 Request::previndex() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.PrevIndex)
  return previndex_;
}
void Request::set_previndex(::google::protobuf::uint64 value) {
  set_has_previndex();
  previndex_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.PrevIndex)
}

// optional bool PrevExist = 8;
bool Request::has_prevexist() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Request::set_has_prevexist() {
  _has_bits_[0] |= 0x00000200u;
}
void Request::clear_has_prevexist() {
  _has_bits_[0] &= ~0x00000200u;
}
void Request::clear_prevexist() {
  prevexist_ = false;
  clear_has_prevexist();
}
bool Request::prevexist() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.PrevExist)
  return prevexist_;
}
void Request::set_prevexist(bool value) {
  set_has_prevexist();
  prevexist_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.PrevExist)
}

// optional int64 Expiration = 9;
bool Request::has_expiration() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Request::set_has_expiration() {
  _has_bits_[0] |= 0x00000040u;
}
void Request::clear_has_expiration() {
  _has_bits_[0] &= ~0x00000040u;
}
void Request::clear_expiration() {
  expiration_ = GOOGLE_LONGLONG(0);
  clear_has_expiration();
}
::google::protobuf::int64 Request::expiration() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Expiration)
  return expiration_;
}
void Request::set_expiration(::google::protobuf::int64 value) {
  set_has_expiration();
  expiration_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Expiration)
}

// optional bool Wait = 10;
bool Request::has_wait() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Request::set_has_wait() {
  _has_bits_[0] |= 0x00000400u;
}
void Request::clear_has_wait() {
  _has_bits_[0] &= ~0x00000400u;
}
void Request::clear_wait() {
  wait_ = false;
  clear_has_wait();
}
bool Request::wait() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Wait)
  return wait_;
}
void Request::set_wait(bool value) {
  set_has_wait();
  wait_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Wait)
}

// optional uint64 Since = 11;
bool Request::has_since() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Request::set_has_since() {
  _has_bits_[0] |= 0x00000080u;
}
void Request::clear_has_since() {
  _has_bits_[0] &= ~0x00000080u;
}
void Request::clear_since() {
  since_ = GOOGLE_ULONGLONG(0);
  clear_has_since();
}
::google::protobuf::uint64 Request::since() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Since)
  return since_;
}
void Request::set_since(::google::protobuf::uint64 value) {
  set_has_since();
  since_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Since)
}

// optional bool Recursive = 12;
bool Request::has_recursive() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Request::set_has_recursive() {
  _has_bits_[0] |= 0x00000800u;
}
void Request::clear_has_recursive() {
  _has_bits_[0] &= ~0x00000800u;
}
void Request::clear_recursive() {
  recursive_ = false;
  clear_has_recursive();
}
bool Request::recursive() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Recursive)
  return recursive_;
}
void Request::set_recursive(bool value) {
  set_has_recursive();
  recursive_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Recursive)
}

// optional bool Sorted = 13;
bool Request::has_sorted() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Request::set_has_sorted() {
  _has_bits_[0] |= 0x00001000u;
}
void Request::clear_has_sorted() {
  _has_bits_[0] &= ~0x00001000u;
}
void Request::clear_sorted() {
  sorted_ = false;
  clear_has_sorted();
}
bool Request::sorted() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Sorted)
  return sorted_;
}
void Request::set_sorted(bool value) {
  set_has_sorted();
  sorted_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Sorted)
}

// optional bool Quorum = 14;
bool Request::has_quorum() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Request::set_has_quorum() {
  _has_bits_[0] |= 0x00002000u;
}
void Request::clear_has_quorum() {
  _has_bits_[0] &= ~0x00002000u;
}
void Request::clear_quorum() {
  quorum_ = false;
  clear_has_quorum();
}
bool Request::quorum() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Quorum)
  return quorum_;
}
void Request::set_quorum(bool value) {
  set_has_quorum();
  quorum_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Quorum)
}

// optional int64 Time = 15;
bool Request::has_time() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void Request::set_has_time() {
  _has_bits_[0] |= 0x00010000u;
}
void Request::clear_has_time() {
  _has_bits_[0] &= ~0x00010000u;
}
void Request::clear_time() {
  time_ = GOOGLE_LONGLONG(0);
  clear_has_time();
}
::google::protobuf::int64 Request::time() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Time)
  return time_;
}
void Request::set_time(::google::protobuf::int64 value) {
  set_has_time();
  time_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Time)
}

// optional bool Stream = 16;
bool Request::has_stream() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Request::set_has_stream() {
  _has_bits_[0] |= 0x00004000u;
}
void Request::clear_has_stream() {
  _has_bits_[0] &= ~0x00004000u;
}
void Request::clear_stream() {
  stream_ = false;
  clear_has_stream();
}
bool Request::stream() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Stream)
  return stream_;
}
void Request::set_stream(bool value) {
  set_has_stream();
  stream_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Stream)
}

// optional bool Refresh = 17;
bool Request::has_refresh() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void Request::set_has_refresh() {
  _has_bits_[0] |= 0x00008000u;
}
void Request::clear_has_refresh() {
  _has_bits_[0] &= ~0x00008000u;
}
void Request::clear_refresh() {
  refresh_ = false;
  clear_has_refresh();
}
bool Request::refresh() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Request.Refresh)
  return refresh_;
}
void Request::set_refresh(bool value) {
  set_has_refresh();
  refresh_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Request.Refresh)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Metadata::kNodeIDFieldNumber;
const int Metadata::kClusterIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Metadata::Metadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_etcdserver_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:etcdserverpb.Metadata)
}
Metadata::Metadata(const Metadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&nodeid_, &from.nodeid_,
    static_cast<size_t>(reinterpret_cast<char*>(&clusterid_) -
    reinterpret_cast<char*>(&nodeid_)) + sizeof(clusterid_));
  // @@protoc_insertion_point(copy_constructor:etcdserverpb.Metadata)
}

void Metadata::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&nodeid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&clusterid_) -
      reinterpret_cast<char*>(&nodeid_)) + sizeof(clusterid_));
}

Metadata::~Metadata() {
  // @@protoc_insertion_point(destructor:etcdserverpb.Metadata)
  SharedDtor();
}

void Metadata::SharedDtor() {
}

void Metadata::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Metadata::descriptor() {
  protobuf_etcdserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etcdserver_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Metadata& Metadata::default_instance() {
  protobuf_etcdserver_2eproto::InitDefaults();
  return *internal_default_instance();
}

Metadata* Metadata::New(::google::protobuf::Arena* arena) const {
  Metadata* n = new Metadata;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Metadata::Clear() {
// @@protoc_insertion_point(message_clear_start:etcdserverpb.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 3u) {
    ::memset(&nodeid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&clusterid_) -
        reinterpret_cast<char*>(&nodeid_)) + sizeof(clusterid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Metadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:etcdserverpb.Metadata)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 NodeID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          set_has_nodeid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nodeid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 ClusterID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          set_has_clusterid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &clusterid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:etcdserverpb.Metadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:etcdserverpb.Metadata)
  return false;
#undef DO_
}

void Metadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:etcdserverpb.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 NodeID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->nodeid(), output);
  }

  // optional uint64 ClusterID = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->clusterid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:etcdserverpb.Metadata)
}

::google::protobuf::uint8* Metadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:etcdserverpb.Metadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 NodeID = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->nodeid(), target);
  }

  // optional uint64 ClusterID = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->clusterid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:etcdserverpb.Metadata)
  return target;
}

size_t Metadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:etcdserverpb.Metadata)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 NodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->nodeid());
    }

    // optional uint64 ClusterID = 2;
    if (has_clusterid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->clusterid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Metadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:etcdserverpb.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  const Metadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Metadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:etcdserverpb.Metadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:etcdserverpb.Metadata)
    MergeFrom(*source);
  }
}

void Metadata::MergeFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:etcdserverpb.Metadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      nodeid_ = from.nodeid_;
    }
    if (cached_has_bits & 0x00000002u) {
      clusterid_ = from.clusterid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Metadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:etcdserverpb.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Metadata::CopyFrom(const Metadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:etcdserverpb.Metadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Metadata::IsInitialized() const {
  return true;
}

void Metadata::Swap(Metadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Metadata::InternalSwap(Metadata* other) {
  using std::swap;
  swap(nodeid_, other->nodeid_);
  swap(clusterid_, other->clusterid_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Metadata::GetMetadata() const {
  protobuf_etcdserver_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_etcdserver_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Metadata

// optional uint64 NodeID = 1;
bool Metadata::has_nodeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Metadata::set_has_nodeid() {
  _has_bits_[0] |= 0x00000001u;
}
void Metadata::clear_has_nodeid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Metadata::clear_nodeid() {
  nodeid_ = GOOGLE_ULONGLONG(0);
  clear_has_nodeid();
}
::google::protobuf::uint64 Metadata::nodeid() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Metadata.NodeID)
  return nodeid_;
}
void Metadata::set_nodeid(::google::protobuf::uint64 value) {
  set_has_nodeid();
  nodeid_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Metadata.NodeID)
}

// optional uint64 ClusterID = 2;
bool Metadata::has_clusterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Metadata::set_has_clusterid() {
  _has_bits_[0] |= 0x00000002u;
}
void Metadata::clear_has_clusterid() {
  _has_bits_[0] &= ~0x00000002u;
}
void Metadata::clear_clusterid() {
  clusterid_ = GOOGLE_ULONGLONG(0);
  clear_has_clusterid();
}
::google::protobuf::uint64 Metadata::clusterid() const {
  // @@protoc_insertion_point(field_get:etcdserverpb.Metadata.ClusterID)
  return clusterid_;
}
void Metadata::set_clusterid(::google::protobuf::uint64 value) {
  set_has_clusterid();
  clusterid_ = value;
  // @@protoc_insertion_point(field_set:etcdserverpb.Metadata.ClusterID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace etcdserverpb

// @@protoc_insertion_point(global_scope)
